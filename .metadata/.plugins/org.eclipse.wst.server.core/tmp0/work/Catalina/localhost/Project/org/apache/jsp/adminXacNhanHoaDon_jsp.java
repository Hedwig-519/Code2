/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.90
 * Generated at: 2023-09-26 13:51:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.NumberFormat;
import java.util.Locale;
import bean.AdminXacNhanHoaDonbean;
import java.util.ArrayList;
import bean.AdminDangNhapbean;

public final class adminXacNhanHoaDon_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Locale");
    _jspx_imports_classes.add("bean.AdminXacNhanHoaDonbean");
    _jspx_imports_classes.add("bean.AdminDangNhapbean");
    _jspx_imports_classes.add("java.text.NumberFormat");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Xác nhận hóa đơn</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("            <a href=\"adminTrangChuController\" class=\"navbar-brand\">Trang chủ</a>\r\n");
      out.write("            <button type=\"button\" class=\"navbar-toggler\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarCollapse1\">\r\n");
      out.write("                <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("            </button>\r\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"navbarCollapse1\">\r\n");
      out.write("                <div class=\"navbar-nav\">\r\n");
      out.write("               \r\n");
      out.write("                    <a href=\"adminQuanLyMatHangController\" class=\"nav-item nav-link\">Quản lý mặt hàng</a>\r\n");
      out.write("                    <a href=\"adminXacNhanMuahangController\" class=\"nav-item nav-link\">Xác nhận mua hàng</a>\r\n");
      out.write("                    <a href=\"adminXacNhanHoaDonController\" class=\"nav-item nav-link\">Xác nhận hóa đơn</a>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"navbar-nav d-flex ms-auto\">\r\n");
      out.write("                ");
AdminDangNhapbean adminbean = (AdminDangNhapbean) session.getAttribute("admin");
                if(adminbean == null){
      out.write("\r\n");
      out.write("               \r\n");
      out.write("                <a href=\"adminDangNhapController\" class=\"nav-item nav-link\">Đăng nhập</a>\r\n");
      out.write("                ");
}else{ 
      out.write("\r\n");
      out.write("                <a href=\"#\" class=\"nav-item nav-link\">");
      out.print(adminbean.getHoTen());
      out.write("</a>\r\n");
      out.write("                <a href=\"adminDangXuatController\" class=\"nav-item nav-link\">Đăng xuất</a>\r\n");
      out.write("                ");
} 
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("    \r\n");
      out.write("    <div class = \"container-fluid mt-3\">\r\n");
      out.write("    <div style=\"text-align: center\"><h3>Xác nhận hóa đơn</h3></div>\r\n");
      out.write("    <br>\r\n");
      out.write("    <table class = \"table table-responsive\">\r\n");
      out.write("   		<thead class=\"table-dark\">\r\n");
      out.write("    <tr>\r\n");
      out.write("      <th scope=\"col\">Mã hóa đơn</th>\r\n");
      out.write("      \r\n");
      out.write("      <th scope=\"col\">Họ tên</th>\r\n");
      out.write("      <th scope=\"col\">Ngày mua</th>\r\n");
      out.write("      <th scope=\"col\">Tổng tiền</th>\r\n");
      out.write("      <th scope=\"col\">Tình trạng</th>\r\n");
      out.write("       <th scope=\"col\">Xác nhận</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("  </thead>\r\n");
      out.write("  \r\n");
      out.write("    	<tbody>\r\n");
      out.write("    		");

    		Locale localeVN = new Locale("vi", "VN");
    	    NumberFormat vn = NumberFormat.getInstance(localeVN);
    		ArrayList<AdminXacNhanHoaDonbean> dsXacNhanHD = (ArrayList<AdminXacNhanHoaDonbean>) request.getAttribute("dsXacNhanHD");
    		for(AdminXacNhanHoaDonbean hoadon : dsXacNhanHD){ 
      out.write("\r\n");
      out.write("    		\r\n");
      out.write("    		<tr>\r\n");
      out.write("    	<th scope=\"row\">");
      out.print(hoadon.getMaHoaDon() );
      out.write("</th>\r\n");
      out.write("    	<td>");
      out.print(hoadon.getHoTen() );
      out.write("</td>\r\n");
      out.write("    	<td>");
      out.print(hoadon.getNgayMua());
      out.write("</td>\r\n");
      out.write("    	<td>");
      out.print(vn.format(hoadon.getTongTien()));
      out.write("đ</td>\r\n");
      out.write("    	<td>");
      out.print(hoadon.isTinhTrang() ? "Đã thanh toán": "Chưa thanh toán" );
      out.write("</td>\r\n");
      out.write("    	<td><a href=\"adminXacNhanHoaDonController?maHD=");
      out.print(hoadon.getMaHoaDon() );
      out.write("\" class = \"btn btn-outline-dark\">Xác nhận</a></td>\r\n");
      out.write("    	\r\n");
      out.write("    	\r\n");
      out.write("    	\r\n");
      out.write("    	</tr>\r\n");
      out.write("    			");
} 
      out.write("\r\n");
      out.write("    	</tbody>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
